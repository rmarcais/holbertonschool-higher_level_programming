============================
How to use 4-print_square.py
============================


Requirements
------------

. size is the size length of the square
. size must be an integer, otherwise raise a TypeError
 exception with the message size must be an integer
. if size is less than 0, raise a ValueError exception
 with the message size must be >= 0
. if size is a float and is less than 0, raise a TypeError exception
 with the message size must be an integer


Tests:
======

size as an integer:
-------------------

>>> print_square = __import__('4-print_square').print_square

>>> print_square(4)
####
####
####
####


>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########


>>> print_square(0)


size as a non_integer:
----------------------


>>> print_square(1.0)
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square([1, 2, 3])
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square((1, 2, 3))
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square("Holberton")
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square(str(123))
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square(float(1))
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square(float("inf"))
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square(float("NaN"))
Traceback (most recent call last):
TypeError: size must be an integer


size < 0:
---------


>>> print_square(-1)
Traceback (most recent call last):
ValueError: size must be >= 0


>>> print_square(-25)
Traceback (most recent call last):
ValueError: size must be >= 0


size as float and < 0:
----------------------


>>> print_square(-1.0)
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square(-32.5)
Traceback (most recent call last):
TypeError: size must be an integer


without argument:
-----------------


>>> print_square()
Traceback (most recent call last):
TypeError: print_square() missing 1 required positional argument: 'size'
