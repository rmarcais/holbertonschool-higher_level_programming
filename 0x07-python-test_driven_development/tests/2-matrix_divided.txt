===========================
How to use 2-matrix_divided
===========================

Requirements
------------
. matrix must be a list of lists of integers or floats, otherwise
 raise a TypeError exception with the message matrix must be a matrix
 (list of lists) of integers/floats
. Each row of the matrix must be of the same size, otherwise raise a TypeError
 exception with the message Each row of the matrix must have the same size
. div must be a number (integer or float), otherwise raise a
 TypeError exception with the message div must be a number
. div canâ€™t be equal to 0, otherwise raise a ZeroDivisionError
 exception with the message division by zero
. All elements of the matrix should be divided by div,
 rounded to 2 decimal places
. Returns a new matrix

Tests:
======

div as a number:
--------

It works when div is a number (int or float), differement from 0 and
when div is float("NaN") or float("inf"):

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]


>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


>>> matrix_divided(matrix, 5)
[[0.2, 0.4, 0.6], [0.8, 1.0, 1.2]]


>>> matrix_divided(matrix, -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]


>>> matrix_divided(matrix, 4.5)
[[0.22, 0.44, 0.67], [0.89, 1.11, 1.33]]


>>> matrix_divided(matrix ,-2.3)
[[-0.43, -0.87, -1.3], [-1.74, -2.17, -2.61]]


>>> matrix_divided(matrix, float("NaN"))
[[nan, nan, nan], [nan, nan, nan]]


>>> matrix_divided(matrix, float("inf"))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]


>>> matrix_divided([[1, 2], [float("inf"), 4]], float("inf"))
[[0.0, 0.0], [nan, 0.0]]


div as a non-number:
--------------------


But it fails when div is equal to 0, equal to None or if div isn't a number:

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero


>>> matrix_divided(matrix, None)
Traceback (most recent call last):
TypeError: div must be a number


>>> matrix_divided(matrix, "Holberton")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, [1, 2, 3])
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix,)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'


>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


matrix with different row sizes:
--------------------------------

>>> matrix = [[1, 2, 3], [5, 6]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size


One element of matrix as a non-number:
--------------------------------------

>>> matrix = [[1, 2, 3], [4, "School", 6]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [[1, 2, 3], [[10, 11, 12], 5, 6]]
>>> matrix_divided(matrix, 5)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
