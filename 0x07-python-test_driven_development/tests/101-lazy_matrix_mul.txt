=================================
How to use 101-lazy_matrix_mul.py
=================================


Tests:
======


>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul


m_a and m_b as matrices:
------------------------


>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
array([[ 7, 10],
       [15, 22]])


>>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
array([[13, 16]])


error raising:
--------------


>>> lazy_matrix_mul("hello", [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: Scalar operands are not allowed, use '*' instead


>>> lazy_matrix_mul([[1, 2], [3, 4]], "School")
Traceback (most recent call last):
ValueError: Scalar operands are not allowed, use '*' instead


>>> lazy_matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: shapes (0,) and (2,2) not aligned: 0 (dim 0) != 2 (dim 0)


>>> lazy_matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
ValueError: shapes (2,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0)


>>> lazy_matrix_mul([[]], [[]])
Traceback (most recent call last):
ValueError: shapes (1,0) and (1,0) not aligned: 0 (dim 1) != 1 (dim 0)


>>> lazy_matrix_mul([[1, 2], [3, 4]], [[]])
Traceback (most recent call last):
ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)


>>> lazy_matrix_mul([[1, 2], [3, "holberton"]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: invalid data type for einsum


>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, "School"], [3, 4]])
Traceback (most recent call last):
TypeError: invalid data type for einsum


>>> lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: setting an array element with a sequence.


>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]])
Traceback (most recent call last):
ValueError: setting an array element with a sequence.


>>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
ValueError: shapes (2,3) and (2,3) not aligned: 3 (dim 1) != 2 (dim 0)
