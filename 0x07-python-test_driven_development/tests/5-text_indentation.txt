================================
How to use 5-text_indentation.py
================================


Requirements
------------

.text must be a string, otherwise raise a TypeError exception with the message
 text must be a string
. There should be no space at the beginning or at the end of each printed line


Tests:
======

text as a string:
-----------------


>>> text_indentation = __import__('5-text_indentation').text_indentation

>>> text_indentation("""Lorem ipsum dolor sit amet, \
... consectetur adipiscing elit. \
... Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? \
... Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: \
... Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. \
... Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum \
... rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo \
... stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum \
... cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio \
... beatiorem! Iam ruinas videres""")
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
<BLANKLINE>
Quonam modo?
<BLANKLINE>
Utrum igitur tibi litteram videor an totas paginas commovere?
<BLANKLINE>
Non autem hoc:
<BLANKLINE>
igitur ne illud quidem.
<BLANKLINE>
Fortasse id optimum, sed ubi illud:
<BLANKLINE>
Plus semper voluptatis?
<BLANKLINE>
Teneo, inquit, finem illi videri nihil dolere.
<BLANKLINE>
Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
<BLANKLINE>
Si id dicis, vicimus.
<BLANKLINE>
Inde sermone vario sex illa a Dipylo stadia confecimus.
<BLANKLINE>
Sin aliud quid voles, postea.
<BLANKLINE>
Quae animi affectio suum cuique tribuens atque hanc, quam dico.
<BLANKLINE>
Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres


>>> text_indentation("Hello, my name's Walter White. And you ? John Smith")
Hello, my name's Walter White.
<BLANKLINE>
And you ?
<BLANKLINE>
John Smith


>>> text_indentation(str("hello") + "." + "?" + str("Bye"))
hello.
<BLANKLINE>
?
<BLANKLINE>
Bye


text as a non-string:
---------------------


>>> text_indentation(123)
Traceback (most recent call last):
TypeError: text must be a string


>>> text_indentation(123.456)
Traceback (most recent call last):
TypeError: text must be a string


>>> text_indentation(float("inf"))
Traceback (most recent call last):
TypeError: text must be a string


>>> text_indentation(float("NaN"))
Traceback (most recent call last):
TypeError: text must be a string


>>> text_indentation((1, 2, 3))
Traceback (most recent call last):
TypeError: text must be a string


>>> text_indentation([1, 2, 3])
Traceback (most recent call last):
TypeError: text must be a string


>>> text_indentation(None)
Traceback (most recent call last):
TypeError: text must be a string


>>> text_indentation()
Traceback (most recent call last):
TypeError: text_indentation() missing 1 required positional argument: 'text'


text with a lot of spaces:
--------------------------


>>> text_indentation("Hello.                My name is:    The Rock")
Hello.
<BLANKLINE>
My name is:
<BLANKLINE>
The Rock


>>> text_indentation("   Nice to meet you.    My   name   is   M.   Smith")
Nice to meet you.
<BLANKLINE>
My   name   is   M.
<BLANKLINE>
Smith


>>> text_indentation("     Holberton.       ")
Holberton.
<BLANKLINE>


>>> text_indentation("     ")


>>> text_indentation("")


>>> text_indentation("Holberton ")
Holberton


>>> text_indentation("Holberton: !")
Holberton:
<BLANKLINE>
!
